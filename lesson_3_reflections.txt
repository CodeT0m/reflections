When would you want to create a remote repository rather then keeping all your work local?
The remote repository is useful when you want to share your work with others or for collaboration.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your
remote repository?
When you work in a team on a remote repository you may want to pull a branch manually after you check the code before
adding the latest commits. This way you can avoid errors made in the new commits.

Describe the differences between forks, clones and branches. When would you use one instead of another?
Forks are used to copy a repository from a Github account to another. The original repository won't allow to push
modifications without permission, so you can use a forked repository to add changes. Clones are copies of repositories
from Github to local computer. When you work on a project you can clone a repository, work on a local computer and then
push the local repository to Github. Branches are different paths of commits of the same repository. Branches are used
when work is done by collaborating, or when a new feature is added but is not commited to the master branch.

What is the benefit of having a copy of the last known state of the remote stored locally?
The last known state of the remote which is stored locally will help you keep track of your commits. The repository on
Github will contain commits from collaboration which will need to be merged with your commits, after conflicts are
resolved.

How would you collaborate without using Git or Github? What would be easier, and what would be harder?
Collaborating without using Git or Github will require sending back and forth files between members of the team. It
will be harder to track changes made by members working on the same files. It will be also, time consuming, when one
member is workimg at one file and assuming that file is locked to anyone else. Otherwise it will require that changes
made by two or more members in the same time will be merged in a way to avoid conflicts. I cannot find any argument to
say what would be easier.
